{"remainingRequest":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\blog-person\\src\\components\\TagsCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Learn\\blog-person\\src\\components\\TagsCloud.vue","mtime":1578507727823},{"path":"D:\\Learn\\blog-person\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572976728968},{"path":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js","mtime":1577118252216}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwU3RhdGV9IGZyb20gJ3Z1ZXgnCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJUYWdzQ2xvdWQiLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4ge30KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgcmFuZG9tQ29sb3IoKSB7CiAgICAgICAgICAgIGxldCByZWQgPSBNYXRoLnJhbmRvbSgpICogMjU1IC0gNTAsCiAgICAgICAgICAgICAgICBncmVlbiA9IE1hdGgucmFuZG9tKCkgKiAyNTUgLSA1MCwKICAgICAgICAgICAgICAgIGJsdWUgPSBNYXRoLnJhbmRvbSgpICogMjU1IC0gNTA7CiAgICAgICAgICAgIHJldHVybiBgcmdiKCR7cmVkfSwgJHtncmVlbn0sICR7Ymx1ZX0pYAogICAgICAgIH0sCiAgICAgICAgcmFuZG9tU2l6ZSgpIHsKICAgICAgICAgICAgbGV0IHNjYWxlID0gTWF0aC5yb3VuZCh3aW5kb3cuaW5uZXJXaWR0aC8xOTIwICogMTApIC8gMTA7CiAgICAgICAgICAgIGxldCBzaXplID0gYCR7KE1hdGgucmFuZG9tKCkgKiAyMCArIDE2ICogc2NhbGUpfXB4YDsKICAgICAgICAgICAgcmV0dXJuIHNpemUKICAgICAgICB9LAogICAgICAgIGZpbHRlckJsb2cgKGUpIHsKICAgICAgICAgICAgbGV0IHRleHQgPSBlLnRhcmdldC5pbm5lclRleHQudHJpbSgpOwogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoImhvbWUvdXBkYXRlRmlsdGVyQmxvZyIsIHRleHQpOwogICAgICAgIH0sCiAgICAgICAgcmVzZXRGaWx0ZXIgKCkgewogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoImhvbWUvdXBkYXRlRmlsdGVyQmxvZyIsICcnKTsKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICB0YWdMaXN0ICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGF0dHJzWyd0YWdzJ10KICAgICAgICB9LAogICAgICAgIC4uLm1hcFN0YXRlKHsKICAgICAgICAgICAgX2ZpbHRlcjogc3RhdGUgPT4gc3RhdGUuaG9tZS5maWx0ZXJCbG9nCiAgICAgICAgfSkKICAgIH0KfQo="},{"version":3,"sources":["TagsCloud.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TagsCloud.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <el-card class=\"box-card\">\r\n        <div class=\"reset-fix\" slot=\"header\">\r\n            <span>\r\n                随机标签云\r\n                <a v-show=\"_filter\" class=\"reset-filter\" @click=\"resetFilter\">我要看全部</a>\r\n            </span>\r\n        </div>\r\n        <div class=\"text\" v-if=\"tagList.length\">\r\n            <span @click=\"filterBlog($event)\" :key=\"index\" :style=\"{color: randomColor(), fontSize: randomSize()}\" v-for=\"(item,index) in tagList\">\r\n                {{ item.tag }}\r\n            </span>\r\n        </div>\r\n        <div v-else class=\"empty-show\">\r\n            这里空空如也...\r\n        </div>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\n    import {mapState} from 'vuex'\r\n    export default {\r\n        name: \"TagsCloud\",\r\n        data() {\r\n            return {}\r\n        },\r\n        methods: {\r\n            randomColor() {\r\n                let red = Math.random() * 255 - 50,\r\n                    green = Math.random() * 255 - 50,\r\n                    blue = Math.random() * 255 - 50;\r\n                return `rgb(${red}, ${green}, ${blue})`\r\n            },\r\n            randomSize() {\r\n                let scale = Math.round(window.innerWidth/1920 * 10) / 10;\r\n                let size = `${(Math.random() * 20 + 16 * scale)}px`;\r\n                return size\r\n            },\r\n            filterBlog (e) {\r\n                let text = e.target.innerText.trim();\r\n                this.$store.commit(\"home/updateFilterBlog\", text);\r\n            },\r\n            resetFilter () {\r\n                this.$store.commit(\"home/updateFilterBlog\", '');\r\n            }\r\n        },\r\n        computed: {\r\n            tagList () {\r\n                return this.$attrs['tags']\r\n            },\r\n            ...mapState({\r\n                _filter: state => state.home.filterBlog\r\n            })\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .text {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .text>span {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .reset-fix:before,\r\n    .reset-fix:after {\r\n        display: table;\r\n        content: \"\";\r\n    }\r\n\r\n    .reset-fix:after {\r\n        clear: both\r\n    }\r\n\r\n    .reset-filter {\r\n        cursor: pointer;\r\n        margin-left: 20px;\r\n        color: #5340df;\r\n        border-bottom: 1px solid transparent;\r\n    }\r\n\r\n    .reset-filter:hover {\r\n        color: #67c23a;\r\n        transition: all 1.5s;\r\n        border-bottom-color: #67c23a;\r\n    }\r\n\r\n    .box-card {\r\n        width: 100%;\r\n        /*height: 250px;*/\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .empty-show {\r\n        color: #ced1d8;\r\n        font-size: 13px;\r\n    }\r\n\r\n</style>"]}]}