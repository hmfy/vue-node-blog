{"remainingRequest":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\blog-person\\src\\components\\Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Learn\\blog-person\\src\\components\\Main.vue","mtime":1578232814716},{"path":"D:\\Learn\\blog-person\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572976728968},{"path":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js","mtime":1577118252216}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVycywgbWFwU3RhdGV9IGZyb20gInZ1ZXgiOwppbXBvcnQgTmV3QXJ0aWNsZSBmcm9tICIuLi9jb21wb25lbnRzL05ld0FydGljbGUiCmltcG9ydCBOZXdDb21tZW50cyBmcm9tICIuLi9jb21wb25lbnRzL05ld0NvbW1lbnRzIgppbXBvcnQgVGFnc0Nsb3VkIGZyb20gIi4uL2NvbXBvbmVudHMvVGFnc0Nsb3VkIgppbXBvcnQgTGluZUxpc3QgZnJvbSAiLi4vY29tcG9uZW50cy9MaW5lTGlzdCIKaW1wb3J0IFN1Ym1pdEJsb2cgZnJvbSAiLi4vY29tcG9uZW50cy9TdWJtaXRCbG9nIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJNYWluIiwKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRhZ3NMaXN0OiBbXSwKICAgICAgICAgICAgbmV3Q29tbWVudHM6IFtdLAogICAgICAgICAgICBuZXdBcnRpY2xlczogW10sCiAgICAgICAgfQogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBTdWJtaXRCbG9nLAogICAgICAgIE5ld0FydGljbGUsCiAgICAgICAgTmV3Q29tbWVudHMsCiAgICAgICAgVGFnc0Nsb3VkLAogICAgICAgIExpbmVMaXN0CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGxvb3BJbml0ICh0YXJnZXRBcnIsIG9yaWdpbkFycikgewogICAgICAgICAgICB0YXJnZXRBcnIuZm9yRWFjaChlbGUgPT4gewogICAgICAgICAgICAgICAgb3JpZ2luQXJyLnB1c2goZWxlKTsKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGdldFJpZ2h0SW5mbyAoKSB7CiAgICAgICAgICAgIHRoaXMuYXhpb3MoewogICAgICAgICAgICAgICAgdXJsOiAnL2dldFJpZ2h0SW5mbycKICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmxvb3BJbml0KGRhdGFbMF0sIHRoaXMudGFnc0xpc3QpOwogICAgICAgICAgICAgICAgICAgIHRoaXMubG9vcEluaXQoZGF0YVsxXSwgdGhpcy5uZXdDb21tZW50cyk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb29wSW5pdChkYXRhWzJdLCB0aGlzLm5ld0FydGljbGVzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHJlZnJlc2hTZWxmICgpIHsKICAgICAgICAgICAgY29uc3Qge25ld0NvbW1lbnRzLCB0YWdzTGlzdCwgbmV3QXJ0aWNsZXN9ID0gdGhpczsKICAgICAgICAgICAgbmV3Q29tbWVudHMubGVuZ3RoID0gMDsKICAgICAgICAgICAgdGFnc0xpc3QubGVuZ3RoID0gMDsKICAgICAgICAgICAgbmV3QXJ0aWNsZXMubGVuZ3RoID0gMDsKICAgICAgICAgICAgdGhpcy5nZXRSaWdodEluZm8oKTsKICAgICAgICB9LAogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLyoKICAgICAgICBtYXBTdGF0ZeaYr+S4gOS4queUsXN0YXRl5a+55bqU55qE5Ye95pWwKOavj+asoeivu+WPlnN0YXRl5Lya5omn6KGM6K+l5Ye95pWw6L+U5Zue5bm2c3RhdGUp57uE5oiQ55qE5a+56LGhOwogICAgICAgIOiLpeWPqumcgOimgeeUqHN0YXRl6YeM55qE5YC86L+b6KGM5Yid5aeL5YyWKOS4jeWFs+W/g+WQjue7rXN0YXRl55qE5Y+Y5YyWKSwKICAgICAgICDliJnlj6/kvb/nlKh0aGlzLiRzdG9yZS5zdGF0ZeeahOW9ouW8j+i/m+ihjOWPluWAvAogICAgICAgICovCiAgICAgICAgLi4ubWFwU3RhdGUoWyJjbG91ZFRhZ3MiLCAibGVmdENvbCIsICJsaW5lTGlzdCIsICJzdWJtaXRCbG9nIl0pLAogICAgICAgIC4uLm1hcEdldHRlcnMoewogICAgICAgICAgICBwaG9uZTogImdldERldmljZUlzUGhvbmUiCiAgICAgICAgfSksCiAgICAgICAgbGlzdGVuU2Nyb2xsICgpIHsKICAgICAgICAgICAgbGV0IG9mZnNldEhlaWdodCA9IHRoaXMuJHJlZnNbJ3Njcm9sbCddLm9mZnNldEhlaWdodDsKICAgICAgICAgICAgcmV0dXJuIG9mZnNldEhlaWdodAogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIGNvbnNvbGUubG9nKHRoaXMubGlzdGVuU2Nyb2xsKQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5nZXRSaWdodEluZm8oKTsKICAgIH0KfQo="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <el-row>\r\n        <!--左-->\r\n        <el-col :span=\"phone ? 1 : 3\">\r\n            <div class=\"grid-content\"></div>\r\n        </el-col>\r\n        <!--中-->\r\n        <el-col :span=\"phone ? 22 : 18\">\r\n            <div class=\"bg-white\">\r\n                <el-row :gutter=\"20\">\r\n                    <!--左-->\r\n                    <el-col :span=\"leftCol\">\r\n                        <div class=\"grid-left\">\r\n                            <slot  @refreshHome=\"refreshSelf\"/>\r\n                        </div>\r\n                    </el-col>\r\n                    <!--右-->\r\n                    <el-col :span=\"8\" v-show=\"cloudTags\">\r\n                        <div class=\"grid-right\" ref=\"scroll\">\r\n                            <tags-cloud :tags=\"tagsList\"/>\r\n                            <new-article :articles=\"newArticles\"/>\r\n                            <new-comments :comments=\"newComments\"/>\r\n                        </div>\r\n                    </el-col>\r\n                    <el-col :span=\"8\" v-show=\"lineList\" class=\"_fixed\">\r\n                        <div class=\"grid-right\">\r\n                            <line-list></line-list>\r\n                        </div>\r\n                    </el-col>\r\n                    <el-col :span=\"phone ? 24 : 8\" v-show=\"submitBlog\">\r\n                        <div class=\"grid-right\">\r\n                            <submit-blog @refreshHome=\"refreshSelf\"/>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n            </div>\r\n        </el-col>\r\n        <!--右-->\r\n        <el-col :span=\"phone ? 1 : 3\">\r\n            <div class=\"grid-content\"></div>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\n    import {mapGetters, mapState} from \"vuex\";\r\n    import NewArticle from \"../components/NewArticle\"\r\n    import NewComments from \"../components/NewComments\"\r\n    import TagsCloud from \"../components/TagsCloud\"\r\n    import LineList from \"../components/LineList\"\r\n    import SubmitBlog from \"../components/SubmitBlog\";\r\n\r\n    export default {\r\n        name: \"Main\",\r\n        data () {\r\n            return {\r\n                tagsList: [],\r\n                newComments: [],\r\n                newArticles: [],\r\n            }\r\n        },\r\n        components: {\r\n            SubmitBlog,\r\n            NewArticle,\r\n            NewComments,\r\n            TagsCloud,\r\n            LineList\r\n        },\r\n        methods: {\r\n            loopInit (targetArr, originArr) {\r\n                targetArr.forEach(ele => {\r\n                    originArr.push(ele);\r\n                })\r\n            },\r\n            getRightInfo () {\r\n                this.axios({\r\n                    url: '/getRightInfo'\r\n                }).then(res => {\r\n                    if (res.data.length) {\r\n                        const data = res.data;\r\n                        this.loopInit(data[0], this.tagsList);\r\n                        this.loopInit(data[1], this.newComments);\r\n                        this.loopInit(data[2], this.newArticles);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n            },\r\n            refreshSelf () {\r\n                const {newComments, tagsList, newArticles} = this;\r\n                newComments.length = 0;\r\n                tagsList.length = 0;\r\n                newArticles.length = 0;\r\n                this.getRightInfo();\r\n            },\r\n        },\r\n        computed: {\r\n            /*\r\n            mapState是一个由state对应的函数(每次读取state会执行该函数返回并state)组成的对象;\r\n            若只需要用state里的值进行初始化(不关心后续state的变化),\r\n            则可使用this.$store.state的形式进行取值\r\n            */\r\n            ...mapState([\"cloudTags\", \"leftCol\", \"lineList\", \"submitBlog\"]),\r\n            ...mapGetters({\r\n                phone: \"getDeviceIsPhone\"\r\n            }),\r\n            listenScroll () {\r\n                let offsetHeight = this.$refs['scroll'].offsetHeight;\r\n                return offsetHeight\r\n            }\r\n        },\r\n        mounted() {\r\n            console.log(this.listenScroll)\r\n        },\r\n        created() {\r\n            this.getRightInfo();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}