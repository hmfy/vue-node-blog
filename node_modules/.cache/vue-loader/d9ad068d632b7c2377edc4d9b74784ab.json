{"remainingRequest":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\blog-person\\src\\components\\EditComments.vue?vue&type=style&index=0&id=618b5b4e&scoped=true&lang=css&","dependencies":[{"path":"D:\\Learn\\blog-person\\src\\components\\EditComments.vue","mtime":1578416996537},{"path":"D:\\Learn\\blog-person\\node_modules\\css-loader\\dist\\cjs.js","mtime":1577118249893},{"path":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1577118252216},{"path":"D:\\Learn\\blog-person\\node_modules\\postcss-loader\\src\\index.js","mtime":1572976729857},{"path":"D:\\Learn\\blog-person\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572976728968},{"path":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js","mtime":1577118252216}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWZvcm0gewogICAgYmFja2dyb3VuZDogI2Y2ZjdmNzsKICAgIHBhZGRpbmc6IDEwcHggMTBweCAwIDEwcHg7CiAgICBtYXJnaW4tdG9wOiAyMHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgI2NlZDFkODsKICAgIGJvcmRlci1yYWRpdXM6IDJweDsKICAgIGJveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMSkKfQoKLmNvZGUtcG9pbnRlciB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBsaW5lLWhlaWdodDogMTsKfQoKLnJlc2V0LXBhZGRpbmcgewogICAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7Cn0KCi5lbC1saW5rLmVsLWxpbmstLWRhbmdlci5pcy11bmRlcmxpbmU6aG92ZXI6YWZ0ZXIsIC5lbC1saW5rLmVsLWxpbmstLWRhbmdlcjphZnRlciB7CiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50Owp9Cg=="},{"version":3,"sources":["EditComments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"EditComments.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <el-form label-width=\"60px\">\r\n        <template v-if=\"phone\">\r\n            <el-form-item label=\"昵称\">\r\n                <el-input clearable placeholder=\"昵称不要太长哦~\" maxlength=\"8\" show-word-limit v-model=\"readerName\"/>\r\n            </el-form-item>\r\n            <el-form-item label=\"验证码\">\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\" class=\"reset-padding\">\r\n                        <el-input clearable placeholder=\"不区分大小写\" v-model=\"verifyCode\"/>\r\n                    </el-col>\r\n                    <el-col :span=\"10\">\r\n                        <div @click=\"handClick\" class=\"code-pointer\" v-html=\"vCode\"></div>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-form-item>\r\n        </template>\r\n        <el-form-item label=\"昵称\" v-else>\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"6\" class=\"reset-padding\">\r\n                    <el-input clearable placeholder=\"昵称不要太长哦~\" maxlength=\"8\" show-word-limit v-model=\"readerName\"/>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                    <el-form-item label=\"验证码\">\r\n                        <el-row :gutter=\"20\">\r\n                            <el-col :span=\"12\" class=\"reset-padding\">\r\n                                <el-input clearable placeholder=\"不区分大小写\" v-model=\"verifyCode\"/>\r\n                            </el-col>\r\n                            <el-col :span=\"10\">\r\n                                <div @click=\"handClick\" class=\"code-pointer\" v-html=\"vCode\"></div>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n        </el-form-item>\r\n        <el-form-item label=\"评论\">\r\n             <el-input :class=\"{'input-ident': reply}\" maxlength=\"800\" :autosize=\"{minRows: 8, maxRows: 100 }\" show-word-limit :placeholder=\"getReplyTips\" type=\"textarea\" v-model=\"content\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <template v-if=\"phone\">\r\n                <el-col :span=\"12\">\r\n                    <el-button @click=\"submitForm\" type=\"primary\">提交</el-button>\r\n                </el-col>\r\n                <transition name=\"el-fade-in-linear\">\r\n                    <el-col :span=\"12\" v-if=\"reply\">\r\n                        <el-button @click=\"resetReply\" type=\"danger\">取消</el-button>\r\n                    </el-col>\r\n                </transition>\r\n            </template>\r\n            <el-row v-else>\r\n                <el-col :span=\"2\">\r\n                    <el-button @click=\"submitForm\" type=\"primary\">提交</el-button>\r\n                </el-col>\r\n                <transition name=\"el-fade-in-linear\">\r\n                    <el-col :span=\"22\" v-if=\"reply\">\r\n                        <el-button @click=\"resetReply\" type=\"danger\">取消</el-button>\r\n                    </el-col>\r\n                </transition>\r\n            </el-row>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script>\r\n    import {mapState, mapGetters} from 'vuex'\r\n\r\n    export default {\r\n        name: \"EditComments\",\r\n        data() {\r\n            return {\r\n                readerName: '',\r\n                content: '',\r\n                vCode: '',\r\n                rightCode: '',\r\n                verifyCode: ''\r\n            }\r\n        },\r\n        methods: {\r\n            submitComment () {\r\n                const {readerName, content, group, parent} = this;\r\n                return this.axios({\r\n                    method: 'post',\r\n                    url: '/submitComment',\r\n                    data: {\r\n                        id: this.$attrs[\"arId\"],\r\n                        ctime: new Date().getTime(),\r\n                        readerName,\r\n                        content,\r\n                        group,\r\n                        parent\r\n                    }\r\n                })\r\n            },\r\n            async submitForm() {\r\n                let name = this.readerName;\r\n                let comment = this.content;\r\n                const tempVerify = this.verifyCode.toLocaleLowerCase();\r\n                const tempRightCode = this.rightCode.toLocaleLowerCase();\r\n                if (name.trim() && comment.trim()) {\r\n                    if (tempRightCode !== tempVerify) {\r\n                        this.$message.warning({\r\n                            message: \"验证码错误~\",\r\n                            offset: window.innerHeight / 2 - 100,\r\n                            customClass: 'small-message'\r\n                        });\r\n                        return undefined\r\n                    }\r\n                    try {\r\n                        await this.submitComment();\r\n                        const newState = !this.commentState;\r\n                        this.readerName = '';\r\n                        this.content = '';\r\n                        this.verifyCode = '';\r\n                        this.$emit(\"refreshComments\", newState); // 提交时触发父级事件更改状态,被兄弟组件监听到\r\n                        this.$store.commit(\"blog/updateCommentState\", {});\r\n                        this.refreshHome();\r\n                    }catch (err) {\r\n                        console.log(err)\r\n                    }\r\n                } else {\r\n                    this.$message.warning({\r\n                        message: \"昵称和内容都不能为空哦~\",\r\n                        offset: window.innerHeight / 2 - 100,\r\n                        customClass: 'small-message'\r\n                    })\r\n                }\r\n            },\r\n            refreshCode() {\r\n                this.axios({\r\n                    url: '/getACode'\r\n                }).then(res => {\r\n                    this.vCode = res.data.data;\r\n                    this.rightCode = res.data.text;\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n            },\r\n            handClick() {\r\n                this.refreshCode()\r\n            },\r\n            resetReply() {\r\n                this.$store.commit(\"blog/updateCommentState\", {})\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState(\"blog\", [\"group\", \"parent\", \"personName\"]),\r\n            ...mapGetters({\r\n                reply: 'blog/reply',\r\n                phone: \"getDeviceIsPhone\"\r\n            }),\r\n            getReplyTips () {\r\n                return this.reply ? this.reply : '@作者'\r\n            },\r\n            commentState () {\r\n                return this.$attrs[\"refresh\"]\r\n            },\r\n            refreshHome () {\r\n                return this.$listeners['refreshHome']\r\n            }\r\n        },\r\n        created() {\r\n            this.refreshCode();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-form {\r\n        background: #f6f7f7;\r\n        padding: 10px 10px 0 10px;\r\n        margin-top: 20px;\r\n        border: 1px solid #ced1d8;\r\n        border-radius: 2px;\r\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\r\n    }\r\n\r\n    .code-pointer {\r\n        cursor: pointer;\r\n        line-height: 1;\r\n    }\r\n\r\n    .reset-padding {\r\n        padding-left: 0 !important;\r\n    }\r\n\r\n    .el-link.el-link--danger.is-underline:hover:after, .el-link.el-link--danger:after {\r\n        border-color: transparent;\r\n    }\r\n</style>"]}]}