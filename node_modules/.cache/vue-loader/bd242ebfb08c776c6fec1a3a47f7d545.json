{"remainingRequest":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\blog-person\\src\\components\\Comments.vue?vue&type=style&index=0&id=5847e424&scoped=true&lang=css&","dependencies":[{"path":"D:\\Learn\\blog-person\\src\\components\\Comments.vue","mtime":1578417732207},{"path":"D:\\Learn\\blog-person\\node_modules\\css-loader\\dist\\cjs.js","mtime":1577118249893},{"path":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1577118252216},{"path":"D:\\Learn\\blog-person\\node_modules\\postcss-loader\\src\\index.js","mtime":1572976729857},{"path":"D:\\Learn\\blog-person\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572976728968},{"path":"D:\\Learn\\blog-person\\node_modules\\vue-loader\\lib\\index.js","mtime":1577118252216}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRleHQtcmlnaHQgewogICAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KCi5lbC1yb3cgewogICAgcGFkZGluZy10b3A6IDNweDsKICAgIGxpbmUtaGVpZ2h0OiAxLjU7Cn0KCi5lbC1yb3c6Zmlyc3QtY2hpbGQgewogICAgcGFkZGluZzogMDsKfQoKLmNvbW1lbnRzIHsKICAgIHBhZGRpbmctYm90dG9tOiAxNXB4Owp9CgouY29tbWVudHM6bGFzdC1jaGlsZCwKLmNoaWxkOmxhc3QtY2hpbGQgewogICAgcGFkZGluZy1ib3R0b206IDA7CiAgICBib3JkZXItYm90dG9tOiBub25lOwp9CgouY2hpbGQgewogICAgZm9udC1zaXplOiAxNHB4OwogICAgLyptYXJnaW4tdG9wOiA1cHg7Ki8KICAgIHBhZGRpbmc6IDVweCAxMHB4IDVweCAyMHB4OwogICAgYmFja2dyb3VuZDogI2Q5ZWRmNzsKICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2RlZGVkZTsKfQoKLnBlcnNvbi1uYW1lIHsKICAgIGNvbG9yOiAjM2E5YWYxOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgouZGF0ZSB7CiAgICBjb2xvcjogIzkwOTM5OTsKfQoKLnNlbGYtcG9pbnRlciB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBjb2xvcjogIzkwOTM5OTsKfQoKLnNlbGYtcG9pbnRlcjpob3ZlciB7CiAgICBjb2xvcjogIzQwOUVGRjsKfQoKLmVtcHR5LXRleHQgewogICAgaGVpZ2h0OiA1MHB4OwogICAgY29sb3I6ICM5MDkzOTk7Cn0KLnJlcGx5LWNvbG9yIHsKICAgIGNvbG9yOiAjNzMzMWYxOwp9Cg=="},{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Comments.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <el-card class=\"box-card\">\r\n        <div v-if=\"comments.length\">\r\n            <div class=\"comments\" v-for=\"(item, index) in comments\">\r\n                <el-row>\r\n                    <el-col :span=\"24\">\r\n                        <div class=\"\">\r\n                            <span class=\"person-name\" @click=\"changeState(item)\"> {{ item.personName }}: </span>\r\n                            {{ item.content }}\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n                <el-row>\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"date\">{{ item.date }}</div>\r\n                    </el-col>\r\n                    <el-col :span=\"12\" class=\"text-right\">\r\n                        <span class=\"self-pointer\" @click=\"changeState(item)\">ÂõûÂ§ç</span>\r\n                       <!-- <el-divider direction=\"vertical\"></el-divider>\r\n                        <span class=\"self-pointer\">ÁÇπËµû({{ item.good }})</span>-->\r\n                    </el-col>\r\n                </el-row>\r\n                <div class=\"child\" v-for=\"child in item.childList\">\r\n                    <el-row>\r\n                        <el-col :span=\"24\">\r\n                            <div class=\"\">\r\n                                <span class=\"person-name\" @click=\"changeState(child)\"> {{ child.personName }}: </span>\r\n                                <span class=\"person-name reply-color\" @click=\"changeState(child, $event)\">\r\n                                    {{ getParentName(child.parent, comments[index]) }}\r\n                                </span>\r\n                                {{ child.content }}\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-col :span=\"12\">\r\n                            <div class=\"date\">{{ child.date }}</div>\r\n                        </el-col>\r\n                        <el-col :span=\"12\" class=\"text-right\">\r\n                            <span class=\"self-pointer\" @click=\"changeState(child)\">ÂõûÂ§ç</span>\r\n                            <!--<el-divider direction=\"vertical\"></el-divider>\r\n                            <span class=\"self-pointer\">ÁÇπËµû({{ child.good }})</span>-->\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div v-else class=\"empty-text\">ÊöÇÊó∂ËøòÊ≤°Êúâ‰∫∫ÁïôË®Ä,Âø´Êù•Êä¢Ê≤ôÂèëÂêßüòÄ</div>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                comments: []\r\n            }\r\n        },\r\n        name: \"Comments\",\r\n        inject: [\"scrollReply\"],\r\n        computed: {\r\n            commentState () {\r\n                return this.$attrs[\"refresh\"]\r\n            }\r\n        },\r\n        watch: {\r\n            commentState (val) {\r\n                try {\r\n                    // ÂÖÑÂºüÁªÑ‰ª∂ÁöÑÁä∂ÊÄÅ‰∏ÄÂèëÁîüÊîπÂèò,È©¨‰∏äÈáçÊñ∞ËØ∑Ê±Ç‰∏ÄÊ¨°Êï∞ÊçÆÂπ∂Ê∏≤Êüì\r\n                    this.formatComments();\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            getParentName(parent, parentObj) {\r\n                let childList = parentObj.childList;\r\n                if (parentObj.id == parent) {\r\n                    if (parentObj.parent == 0) {\r\n                        return \"\"\r\n                    }\r\n                    return \"@\" + parentObj.personName\r\n                }\r\n                if (childList) {\r\n                    for (let i = 0; i < childList.length; i++) {\r\n                        let result = this.getParentName(parent, childList[i]);\r\n                        if (result !== 'continue') {\r\n                            return result\r\n                        }\r\n                    }\r\n                }\r\n                return 'continue' // Ëã•Ê≠§Â§ÑÊú™ËøîÂõû,Âàô‰∏äÈù¢ÁöÑforÂæ™ÁéØÁªìÊùü,ÊúÄÁªàÁªìÊûúÊ∏≤Êüì\r\n            },\r\n            changeState ({group, parent, id, personName}, e) {\r\n                const store = this.$store;\r\n                if (e){\r\n                    store.commit('blog/updateCommentState', {\r\n                        parent,\r\n                        group,\r\n                        personName: e.target.innerText.slice(1)\r\n                    });\r\n                }else if (parent == 0) {\r\n                    /*\r\n                    *  Âç≥Â∞ÜÊèê‰∫§ÁöÑ‰∫∫ÁöÑparentÊòØ: id\r\n                    *  ÁªÑÂ∫îËØ•ÊòØ: id\r\n                    * */\r\n                    store.commit('blog/updateCommentState', {\r\n                        parent: id,\r\n                        group: id,\r\n                        personName\r\n                    });\r\n                } else {\r\n                    /*\r\n                    *  ÁªÑÂ∫îËØ•ÊòØ: group\r\n                    *  parentÊòØ: id\r\n                    * */\r\n                    store.commit('blog/updateCommentState', {\r\n                        parent: id,\r\n                        group: group,\r\n                        personName\r\n                    });\r\n                }\r\n                this.scrollReply();\r\n            },\r\n            getComments () {\r\n                return this.axios({\r\n                    url: '/getComments',\r\n                    params: {\r\n                        id: this.$attrs[\"arId\"]\r\n                    }\r\n                })\r\n            },\r\n            async formatComments () {\r\n                this.comments.length = 0;\r\n                const res = await this.getComments();\r\n                const arr = this.comments;\r\n                const tempArr = [];\r\n                let commentList = res.data[0];\r\n                if (commentList.length) {\r\n                    commentList.forEach(ele => {\r\n                        let obj = {};\r\n                        obj.id = ele.id;\r\n                        obj.content = ele.comments;\r\n                        obj.date = this.$date_format(ele.ctime);\r\n                        obj.parent = ele.parent;\r\n                        obj.personName = ele['user_name'];\r\n                        obj.group = ele.my_group;\r\n                        obj.good = ele.good;\r\n                        tempArr.push(obj);\r\n                    })\r\n                }\r\n                tempArr.forEach(ele => {\r\n                    if (!ele.parent) {\r\n                        ele.childList = [];\r\n                        arr.push(ele)\r\n                    }\r\n                });\r\n                for (let i = 0; i < tempArr.length; i++) {\r\n                    if (tempArr[i].parent) {\r\n                        for (let j = 0; j < arr.length; j++) {\r\n                            if (tempArr[i].group == arr[j].id) {\r\n                                arr[j].childList.push(tempArr[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            try {\r\n                this.formatComments();\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .text-right {\r\n        text-align: right;\r\n    }\r\n\r\n    .el-row {\r\n        padding-top: 3px;\r\n        line-height: 1.5;\r\n    }\r\n\r\n    .el-row:first-child {\r\n        padding: 0;\r\n    }\r\n\r\n    .comments {\r\n        padding-bottom: 15px;\r\n    }\r\n\r\n    .comments:last-child,\r\n    .child:last-child {\r\n        padding-bottom: 0;\r\n        border-bottom: none;\r\n    }\r\n\r\n    .child {\r\n        font-size: 14px;\r\n        /*margin-top: 5px;*/\r\n        padding: 5px 10px 5px 20px;\r\n        background: #d9edf7;\r\n        border-bottom: 1px dashed #dedede;\r\n    }\r\n\r\n    .person-name {\r\n        color: #3a9af1;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .date {\r\n        color: #909399;\r\n    }\r\n\r\n    .self-pointer {\r\n        cursor: pointer;\r\n        color: #909399;\r\n    }\r\n\r\n    .self-pointer:hover {\r\n        color: #409EFF;\r\n    }\r\n\r\n    .empty-text {\r\n        height: 50px;\r\n        color: #909399;\r\n    }\r\n    .reply-color {\r\n        color: #7331f1;\r\n    }\r\n</style>"]}]}